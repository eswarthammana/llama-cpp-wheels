name: Build Windows Wheels

on:
  workflow_dispatch:
    inputs:
      llama_cpp_version:
        description: 'Full llama-cpp-python version (e.g., v0.3.4-cu121)'
        required: true

permissions:
  contents: write

jobs:
  build_windows_wheels:
    runs-on: windows-latest
    steps:
      - name: Extract version tag
        id: extract
        run: |
          echo "::set-output name=tag::${{ github.event.inputs.llama_cpp_version }}"
          # Optionally extract base tag here if needed

      - name: Checkout llama-cpp-python
        uses: actions/checkout@v4
        with:
          repository: abetlen/llama-cpp-python
          ref: ${{ github.event.inputs.llama_cpp_version }}
          submodules: true
          
      - name: Initialize and update git submodules
        run: git submodule update --init --recursive

      - name: List root directory after checkout
        run: dir
        shell: cmd

      - name: List vendor directory after checkout
        run: dir vendor
        shell: cmd

      - name: List llama.cpp directory after checkout
        run: dir vendor\llama.cpp
        shell: cmd

      - name: List common directory after checkout
        run: dir vendor\llama.cpp\common
        shell: cmd

      - name: Patch chrono include and static_assert macro
        shell: pwsh
        run: |
            $logPath = "vendor\llama.cpp\common\log.cpp"

            # Check file exists before patching
            if (-Not (Test-Path $logPath)) {
            Write-Error "File not found: $logPath"
            exit 1
            }

            $lines = Get-Content $logPath

            # Add #include <chrono> if missing
            if (-not ($lines -match "#include <chrono>")) {
            $lastIncludeIdx = ($lines | Select-String '#include' | Select-Object -Last 1).LineNumber - 1
            $lines = $lines[0..$lastIncludeIdx] + '#include <chrono>' + $lines[($lastIncludeIdx+1)..($lines.Length - 1)]
            $lines | Set-Content $logPath
            }

            # Comment out static_assert macro redefinition
            (Get-Content $logPath) | ForEach-Object {
            if ($_ -match '^\s*#define\s+static_assert') {
                "# $($_)"
            } else {
                $_
            }
            } | Set-Content $logPath

      - name: Set up MSVC environment
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: AMD64

      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Build wheels with cibuildwheel
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_ARCHS: "AMD64"
          CFLAGS: "/std:c11"
          CXXFLAGS: "/std:c++17 /Zc:__cplusplus"
          CMAKE_ARGS: >-
              -DCMAKE_INSTALL_LIBDIR=llama_cpp
              -DLLAMA_CUBLAS=OFF
              -DLLAMA_METAL=OFF
              -DLLAMA_OPENBLAS=ON
              -DLLAMA_NATIVE=OFF
              -DCMAKE_C_STANDARD=11
              -DCMAKE_CXX_STANDARD=17
              -DCMAKE_C_STANDARD_REQUIRED=ON
              -DCMAKE_CXX_STANDARD_REQUIRED=ON
              -DLLAMA_BUILD_EXAMPLES=OFF
        run: python -m cibuildwheel --output-dir dist
