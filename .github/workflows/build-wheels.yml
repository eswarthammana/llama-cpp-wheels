name: Build and Publish Wheels

on:
  workflow_dispatch:
    inputs:
      llama_cpp_version:
        description: 'Full llama-cpp-python version (e.g., v0.3.4-cu121)'
        required: true

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            cibw_arch: auto
            manylinux_image: manylinux2014

          - os: ubuntu-latest
            platform: linux
            arch: aarch64
            cibw_arch: aarch64
            manylinux_image: manylinux2014

          - os: macos-latest
            platform: macos
            arch: universal2
            cibw_arch: universal2

          - os: windows-latest
            platform: windows
            arch: AMD64
            cibw_arch: auto

    steps:
      - name: Set up QEMU (for ARM64)
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Python 3.12.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.9'

      - name: Checkout llama-cpp-python
        uses: actions/checkout@v4
        with:
          repository: abetlen/llama-cpp-python
          ref: ${{ inputs.llama_cpp_version }}
          submodules: true

      - name: Extract base tag
        id: extract_tag
        shell: bash
        run: |
          TAG="${{ inputs.llama_cpp_version }}"
          BASE_TAG="${TAG%-*}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "base_tag=$BASE_TAG" >> "$GITHUB_OUTPUT"

      - name: Install system dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential python3-dev libopenblas-dev patchelf

      - name: Install cibuildwheel
        shell: bash
        run: pip install cibuildwheel

      - name: Build wheels with cibuildwheel
        shell: bash
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_ENVIRONMENT: >-
            CMAKE_ARGS="-DLLAMA_CUBLAS=OFF -DLLAMA_METAL=OFF -DLLAMA_OPENBLAS=ON -DLLAMA_NATIVE=OFF -DGGML_BUILD_SHARED=OFF"
          CIBW_SKIP: pp* *musllinux* *-win32
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux_image }}
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse

      - name: Post-build fix: Copy required shared libraries
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          echo "Locating shared objects from build/..."
          mkdir -p llama_cpp
          find build/ -name "libllama.so" -exec cp {} llama_cpp/ \;
          find build/ -name "libggml*.so" -exec cp {} llama_cpp/ \;
          echo "Shared libraries copied to llama_cpp/"

      - name: Inject shared libraries into wheel
        shell: bash
        run: |
          echo "Injecting shared objects into built wheels..."
          for whl in wheelhouse/*.whl; do
            unzip -q "$whl" -d tmp_wheel
            mkdir -p tmp_wheel/llama_cpp
            cp llama_cpp/lib*.so tmp_wheel/llama_cpp/ || true
            (cd tmp_wheel && zip -qr "../$whl" .)
            rm -rf tmp_wheel
          done

      - name: Rename wheel files for clarity
        shell: bash
        run: |
          mkdir renamed
          for whl in wheelhouse/*.whl; do
            base=$(basename "$whl")
            new="llama-cpp-python-${{ matrix.platform }}-${{ matrix.arch }}-${{ steps.extract_tag.outputs.tag }}-${base}"
            cp "$whl" "renamed/$new"
          done

      - name: Upload renamed wheels as GitHub Release Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.llama_cpp_version }}
          name: "llama-cpp-python ${{ inputs.llama_cpp_version }}"
          files: renamed/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
