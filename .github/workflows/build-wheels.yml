name: Build CPU Wheels

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Git tag or commit to build from"
        required: true
      publish_release:
        description: "Publish wheels to GitHub Release?"
        required: false
        default: "true"

jobs:
  build_wheels:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            arch: x86_64
            python-version: "3.12"
            runner: ubuntu-latest

          # Linux aarch64
          - os: ubuntu-latest
            arch: aarch64
            python-version: "3.12"
            runner: ubuntu-latest

          # macOS universal2
          - os: macos-latest
            arch: universal2
            python-version: "3.12"
            runner: macos-latest

          # Windows x86_64
          # - os: windows-latest
          #   arch: x86_64
          #   python-version: "3.12"
          #   runner: windows-latest

    steps:
      - name: Set up QEMU (for ARM64)
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Checkout llama-cpp-python
        uses: actions/checkout@v4
        with:
          repository: abetlen/llama-cpp-python
          ref: ${{ inputs.version }}
          submodules: true

      - name: Install Build Tools (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake python3-dev libopenblas-dev patchelf

      - name: Install Build Tools (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          python -m pip install --upgrade pip setuptools wheel

      - name: Install Build Tools (macOS)
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install cmake openblas

      - name: Build wheel
        shell: bash
        run: |
          python -m pip install -U pip build
          python -m build --wheel --outdir dist/

      - name: Upload built wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          name: llama-wheels-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}
          path: dist/*.whl

  release:
    name: Release to GitHub
    needs: build_wheels
    if: ${{ github.event.inputs.publish_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all_wheels

      - name: Publish wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: all_wheels/**/*.whl
          token: ${{ secrets.GH_PAT }}
